import unittest

from textnode import TextNode, TextType

class TestTextNode(unittest.TestCase):
    def test_create(self) :
        normal_node = TextNode("This is a text node", TextType.TEXT)
        bold_node = TextNode("This is a text node", TextType.BOLD)
        italic_node = TextNode("This is a text node", TextType.ITALIC)
        code_node = TextNode("This is a text node", TextType.CODE)
        link_node = TextNode("This is a text node", TextType.LINK,"https://www.boot.dev")
        image_node = TextNode("This is a text node", TextType.IMAGE, "https://www.boot.dev")
        
        self.assertEqual(normal_node.text,"This is a text node")
        self.assertEqual(normal_node.text_type,TextType.TEXT)
        self.assertIsNone(normal_node.url)
        self.assertEqual(bold_node.text,"This is a text node")
        self.assertEqual(bold_node.text_type,TextType.BOLD)
        self.assertIsNone(bold_node.url)
        self.assertEqual(italic_node.text,"This is a text node")
        self.assertEqual(italic_node.text_type,TextType.ITALIC)
        self.assertIsNone(italic_node.url)
        self.assertEqual(code_node.text,"This is a text node")
        self.assertEqual(code_node.text_type,TextType.CODE)
        self.assertIsNone(code_node.url)
        self.assertEqual(link_node.text,"This is a text node")
        self.assertEqual(link_node.text_type,TextType.LINK)
        self.assertIsNotNone(link_node.url)
        self.assertEqual(link_node.url,"https://www.boot.dev")
        self.assertEqual(image_node.text,"This is a text node")
        self.assertEqual(image_node.text_type,TextType.IMAGE)
        self.assertIsNotNone(image_node.url)
        self.assertEqual(image_node.url,"https://www.boot.dev")
        
    
    def test_eq(self):
        node = TextNode("This is a text node", TextType.TEXT)
        node2 = TextNode("This is a text node", TextType.TEXT)
        self.assertEqual(node, node2)
        node = TextNode("This is a text node", TextType.BOLD)
        node2 = TextNode("This is a text node", TextType.BOLD)
        self.assertEqual(node, node2)
        node = TextNode("This is a text node", TextType.ITALIC)
        node2 = TextNode("This is a text node", TextType.ITALIC)
        self.assertEqual(node, node2)
        node = TextNode("This is a text node", TextType.CODE)
        node2 = TextNode("This is a text node", TextType.CODE)
        self.assertEqual(node, node2)
        node = TextNode("This is a text node", TextType.LINK,"https://www.boot.dev")
        node2 = TextNode("This is a text node", TextType.LINK,"https://www.boot.dev")
        self.assertEqual(node, node2)
        node = TextNode("This is a text node", TextType.IMAGE,"https://www.boot.dev")
        node2 = TextNode("This is a text node", TextType.IMAGE,"https://www.boot.dev")
        self.assertEqual(node, node2)
        
    def test_not_eq(self):
        node = TextNode("This is a text node", TextType.TEXT)
        node2 = TextNode("This is a second text node", TextType.TEXT)
        self.assertNotEqual(node, node2)
        node = TextNode("This is a text node", TextType.TEXT)
        node2 = TextNode("This is a text node", TextType.BOLD)
        
        self.assertNotEqual(node, node2)
        node = TextNode("This is a text node", TextType.BOLD)
        node2 = TextNode("This is a second text node", TextType.BOLD)
        self.assertNotEqual(node, node2)
        node = TextNode("This is a text node", TextType.BOLD)
        node2 = TextNode("This is a text node", TextType.ITALIC)
        self.assertNotEqual(node, node2)
        
        node = TextNode("This is a text node", TextType.ITALIC)
        node2 = TextNode("This is a second text node", TextType.ITALIC)
        self.assertNotEqual(node, node2)
        node = TextNode("This is a text node", TextType.ITALIC)
        node2 = TextNode("This is a text node", TextType.CODE)
        self.assertNotEqual(node, node2)
        
        node = TextNode("This is a text node", TextType.CODE)
        node2 = TextNode("This is a second text node", TextType.CODE)
        self.assertNotEqual(node, node2)
        node = TextNode("This is a text node", TextType.CODE)
        node2 = TextNode("This is a text node", TextType.LINK)
        self.assertNotEqual(node, node2)
        
        node = TextNode("This is a text node", TextType.LINK,"https://www.boot.dev")
        node2 = TextNode("This is a second text node", TextType.LINK,"https://www.boot.dev")
        self.assertNotEqual(node, node2)
        node = TextNode("This is a text node", TextType.LINK,"https://www.boot.dev")
        node2 = TextNode("This is a text node", TextType.IMAGE,"https://www.boot.dev")
        self.assertNotEqual(node, node2)
        node = TextNode("This is a text node", TextType.LINK,"https://www.boot.dev")
        node2 = TextNode("This is a text node", TextType.LINK,"https://www.broot.dev")
        self.assertNotEqual(node, node2)
        
        node = TextNode("This is a text node", TextType.IMAGE,"https://www.boot.dev")
        node2 = TextNode("This is a second text node", TextType.IMAGE,"https://www.boot.dev")
        self.assertNotEqual(node, node2)
        node = TextNode("This is a text node", TextType.IMAGE,"https://www.boot.dev")
        node2 = TextNode("This is a text node", TextType.TEXT,"https://www.boot.dev")
        self.assertNotEqual(node, node2)
        node = TextNode("This is a text node", TextType.IMAGE,"https://www.boot.dev")
        node2 = TextNode("This is a text node", TextType.IMAGE,"https://www.broot.dev")
        self.assertNotEqual(node, node2)

    def test_repr(self):
        node = TextNode("This is a text node", TextType.TEXT)
        self.assertEqual(repr(node), "TextNode(This is a text node, normal_text, None)")
        node = TextNode("This is a text node", TextType.BOLD)
        self.assertEqual(repr(node), "TextNode(This is a text node, bold_text, None)")
        node = TextNode("This is a text node", TextType.ITALIC)
        self.assertEqual(repr(node), "TextNode(This is a text node, italic_text, None)")
        node = TextNode("This is a text node", TextType.CODE)
        self.assertEqual(repr(node), "TextNode(This is a text node, code_text, None)")
        node = TextNode("This is a text node", TextType.LINK,"https://www.boot.dev")
        self.assertEqual(repr(node), "TextNode(This is a text node, link, https://www.boot.dev)")
        node = TextNode("This is a text node", TextType.IMAGE,"https://www.boot.dev")
        self.assertEqual(repr(node), "TextNode(This is a text node, image, https://www.boot.dev)")

    def test_text_node_to_html_node(self):
        node = TextNode("This is raw text", TextType.TEXT)
        html_node = node.text_node_to_html_node()
        self.assertEqual(html_node.tag, None)
        self.assertEqual(html_node.value, "This is raw text")
        self.assertEqual(html_node.props, None)
        node = TextNode("This is a bold text", TextType.BOLD)
        html_node = node.text_node_to_html_node()
        self.assertEqual(html_node.tag, 'b')
        self.assertEqual(html_node.value, "This is a bold text")
        self.assertEqual(html_node.props, None)
        node = TextNode("This is an italic text", TextType.ITALIC)
        html_node = node.text_node_to_html_node()
        self.assertEqual(html_node.tag, 'i')
        self.assertEqual(html_node.value, "This is an italic text")
        self.assertEqual(html_node.props, None)
        node = TextNode("This is a code", TextType.CODE)
        html_node = node.text_node_to_html_node()
        self.assertEqual(html_node.tag, 'code')
        self.assertEqual(html_node.value, "This is a code")
        self.assertEqual(html_node.props, None)
        node = TextNode("This is a link", TextType.LINK,"https://www.boot.dev")
        html_node = node.text_node_to_html_node()
        self.assertEqual(html_node.tag, 'a')
        self.assertEqual(html_node.value, "This is a link")
        self.assertEqual(html_node.props, {"href": "https://www.boot.dev"})
        node = TextNode("This is an image", TextType.IMAGE,"https://www.boot.dev")
        html_node = node.text_node_to_html_node()
        self.assertEqual(html_node.tag, 'img')
        self.assertEqual(html_node.value, '')
        self.assertEqual(html_node.props, {"src": "https://www.boot.dev", "alt": "This is an image"})
        
        node = TextNode(None,None)
        self.assertRaises(Exception,node.text_node_to_html_node)

if __name__ == "__main__":
    unittest.main()